{
	"name": "Side",

	"description": "A Side represents one side of the cube - the 9 pieces of a single face. This class contains operations that can be done on a single side, which is identified by the Coordinate of the plane in which the side lives.",

	"constants": [

		

	],

	"instanceVariables": [



	],

	"methodCategories": [

		{
			"category": "Constructors",
			"methods": []

		},

		{
			"category": "Getters",
			"methods": []

		},

		{
			"category": "Setters",
			"methods": []

		},

		{
			"category": "Static",
			"methods": [

				{
					"name": "turnClockwise()",
					"arguments": [
						{
							"name": "side",
							"type": "XCoordinate",
							"description": "The XCoordinate of the plane in which the side lives. (e.g. Back side corresponds to an XCoordinate of 0)"
						},

						{
							"name": "cube",
							"type": "Cube"
						}
					],
					"returnType": "Cube",
					"access": "Public",
					"description": "Returns a new Cube with the given side turned clockwise"
				},

				{
					"name": "turnClockwise()",
					"arguments": [
						{
							"name": "side",
							"type": "YCoordinate",
							"description": "The YCoordinate of the plane in which the side lives. (e.g. Left side corresponds to an YCoordinate of 0)"
						},

						{
							"name": "cube",
							"type": "Cube"
						}
					],
					"returnType": "Cube",
					"access": "Public",
					"description": "Returns a new Cube with the given side turned clockwise"
				},

				{
					"name": "turnClockwise()",
					"arguments": [
						{
							"name": "side",
							"type": "ZCoordinate",
							"description": "The ZCoordinate of the plane in which the side lives. (e.g. Down side corresponds to an ZCoordinate of 0)"
						},

						{
							"name": "cube",
							"type": "Cube"
						}
					],
					"returnType": "Cube",
					"access": "Public",
					"description": "Returns a new Cube with the given side turned clockwise"
				}
			]

		},

		{
			"category": "Private Helper Methods",
			"methods": [

				{
					"name": "permuteClockwise()",
					"arguments": [
						{
							"name": "cublets",
							"type": "Cublet[]"
						}
					],
					"returnType": "void",
					"access": "Private",
					"description": "Permutes the given array so to represent a clockwise turn on those Cublets"
				},

				{
					"name": "orientClockwise()",
					"arguments": [
						{
							"name": "cublets",
							"type": "Cublet[]"
						},

						{
							"name": "side",
							"type": "XCoordinate"
						}
					],
					"returnType": "void",
					"access": "Private",
					"description": "Orients the Corners and Edges of the given array appropriately when making a clockwise turn on the specified side. Assumes the corners are in their original locations (before the turn)"
				},

				{
					"name": "orientClockwise()",
					"arguments": [
						{
							"name": "cublets",
							"type": "Cublet[]"
						},

						{
							"name": "side",
							"type": "YCoordinate"
						}
					],
					"returnType": "void",
					"access": "Private",
					"description": "Orients the Corners and Edges of the given array appropriately when making a clockwise turn on the specified side. Assumes the corners are in their original locations (before the turn)"
				},

				{
					"name": "orientClockwise()",
					"arguments": [
						{
							"name": "cublets",
							"type": "Cublet[]"
						},

						{
							"name": "side",
							"type": "ZCoordinate"
						}
					],
					"returnType": "void",
					"access": "Private",
					"description": "Orients the Corners and Edges of the given array appropriately when making a clockwise turn on the specified side. Assumes the corners are in their original locations (before the turn)"
				}

			]
		},

		{
			"category": "Other",
			"methods": []

		}

	]

}